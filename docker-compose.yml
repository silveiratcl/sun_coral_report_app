version: "3.9"

services:
   api:
      build:
         context: .
         dockerfile: Dockerfile.dev
      command: >
         sh -c "python manage.py wait_for_db &&
                python manage.py migrate &&
                python manage.py runserver 0.0.0.0:8000"
      environment:
         - DB_HOST=postgres-db
         - DB_NAME=${DB_NAME}
         - DB_USER=${DB_USER}
         - DB_PASS=${DB_PASS}
         - SECRET_KEY=${SECRET_KEY}
         - ALLOWED_HOSTS=${ALLOWED_HOSTS}
         #- DB_PORT=${DB_PORT}
         - DEBUG=1
      volumes:
         - ./app:/app
         - static-data:/vol/web
      ports:
         - 8000:8000 ### ports
      env_file:
         - .env
      restart: "on-failure"
      depends_on:
         - postgres-db
      networks:
         - sc-api

   postgres-db:
      image: kartoza/postgis:12.0
      ports:
         - 5432:5432
      volumes:
         - postgres-data:/var/lib/postgresql
      environment:
         - POSTGRES_DBNAME=${DB_NAME}
         - POSTGRES_USER=${DB_USER}
         - POSTGRES_PASS=${DB_PASS}
      restart: "on-failure"
      networks:
         - sc-api

networks:
   sc-api:
      driver: bridge

volumes:
   postgres-data:
   static-data:
